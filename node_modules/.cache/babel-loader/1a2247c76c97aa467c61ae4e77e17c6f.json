{"ast":null,"code":"var _jsxFileName = \"/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Input/Input.js\";\nimport React from 'react';\nimport aux from '../../hoc/Auxiliary';\nimport styles from './input.modules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [styles.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(styles.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        children: props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case 'date':\n      inputElement = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"dob\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: inputClasses.join(' '),\n          ...props.elementConfig,\n          value: props.value,\n          onChange: props.changed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Input/Input.js"],"names":["React","aux","styles","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","changed","options","map","option","displayValue","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,MAAM,CAACK,YAAR,CAArB;;AAEA,MAAIH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,cAAvB,IAAyCL,KAAK,CAACM,OAAnD,EAA4D;AACxDJ,IAAAA,YAAY,CAACK,IAAb,CAAkBT,MAAM,CAACU,OAAzB;AACH;;AAED,UAASR,KAAK,CAACS,WAAf;AACI,SAAO,OAAP;AACIR,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPV,KAAK,CAACW,aAFC;AAGX,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHF;AAIX,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAO,UAAP;AACIZ,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPV,KAAK,CAACW,aAFC;AAGX,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHF;AAIX,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAO,QAAP;AACIZ,MAAAA,YAAY,gBACR;AACI,QAAA,SAAS,EAAEC,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CADf;AAEI,QAAA,KAAK,EAAEV,KAAK,CAACY,KAFjB;AAGI,QAAA,QAAQ,EAAEZ,KAAK,CAACa,OAHpB;AAAA,kBAIKb,KAAK,CAACW,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,iBACnC;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACJ,KAAzC;AAAA,oBACKI,MAAM,CAACC;AADZ,WAAaD,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA,cADJ;AAYA;;AACA,SAAO,MAAP;AACIX,MAAAA,YAAY,gBAAG;AAAA,uCAAQ;AACvB,UAAA,SAAS,EAAEC,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CADY;AAAA,aAEnBV,KAAK,CAACW,aAFa;AAGvB,UAAA,KAAK,EAAEX,KAAK,CAACY,KAHU;AAIvB,UAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJO;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf;AAMA;;AACR;AACIZ,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPV,KAAK,CAACW,aAFC;AAGX,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHF;AAIX,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAtCR;;AA6CA,sBACI;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACoB,KAAvB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAEpB,MAAM,CAACqB,KAAzB;AAAA,gBAAiCnB,KAAK,CAACoB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKnB,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5DD;;AA8DA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport aux from '../../hoc/Auxiliary';\nimport styles from './input.modules.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [styles.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(styles.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n            case ( 'date' ):\n                inputElement = <div>dob<input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} /></div>;\n                \n                break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={styles.Input}>\n            <label className={styles.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}