{"ast":null,"code":"var _jsxFileName = \"/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Registration/Registration.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '../../components/Button/Button';\nimport Spinner from '../../UI_Components/Spinner/Spinner';\nimport classes from './Registration.css'; //import axios from '../../../axios-orders';\n\nimport Input from '../../components/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Registration extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: '',\n          validation: {\n            required: true,\n            validName: true\n          },\n          valid: false,\n          touched: false\n        },\n        username: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your User Name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        },\n        address: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Address'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6,\n            maxLength: 6,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your E-Mail'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        gender: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: '',\n              displayValue: 'Please select gender'\n            }, {\n              value: 'male',\n              displayValue: 'male'\n            }, {\n              value: 'female',\n              displayValue: 'female'\n            }]\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: true\n        },\n        maritalstatus: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: '',\n              displayValue: 'Please select  marital status'\n            }, {\n              value: 'married',\n              displayValue: 'married'\n            }, {\n              value: 'divorced',\n              displayValue: 'divorced'\n            }, {\n              value: 'single',\n              displayValue: 'single'\n            }]\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: true\n        },\n        phonenumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'phonenumber'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 10,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        dateofbirth: {\n          elementType: 'input',\n          elementConfig: {\n            label: 'DOB',\n            type: 'date',\n            placeholder: 'phonenumber'\n          },\n          value: '',\n          validation: {\n            required: true,\n            ageCheck: true\n          },\n          valid: false,\n          touched: false\n        },\n        registrationDate: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'date',\n            placeholder: 'registration date'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        idtype: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: '',\n              displayValue: 'Please select  ID  Type'\n            }, {\n              value: 'passport',\n              displayValue: 'passport'\n            }, {\n              value: 'driving',\n              displayValue: 'driving license'\n            }, {\n              value: 'ID card',\n              displayValue: 'ID card'\n            }]\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: true\n        },\n        idnumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ID Number'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false,\n      loading: false\n    };\n\n    this.userHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.userForm) {\n        console.log(formElementIdentifier);\n        formData[formElementIdentifier] = this.state.userForm[formElementIdentifier].value;\n      }\n\n      formData[\"id\"] = 'R-' + Math.floor(Math.random() * (999 - 100 + 1) + 100);\n      console.log(\" the generated user id\" + formData.id);\n      const user = {\n        userData: formData\n      };\n      alert(\" Your user Id is  :\" + formData.id);\n      axios.post('http://localhost:3000/users', formData).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedUserForm = { ...this.state.userForm\n      };\n      const updatedFormElement = { ...updatedUserForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n      updatedFormElement.touched = true;\n      updatedUserForm[inputIdentifier] = updatedFormElement;\n      let formIsValid = true;\n\n      for (let inputIdentifier in updatedUserForm) {\n        formIsValid = updatedUserForm[inputIdentifier].valid && formIsValid;\n      }\n\n      this.setState({\n        userForm: updatedUserForm,\n        formIsValid: formIsValid\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.validName) {\n      const pattern = /^[a-zA-Z ]*$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.ageCheck) {\n      console.log(\".............\" + value);\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.userForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.userForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.userHandler,\n      children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: event => this.inputChangedHandler(event, formElement.id)\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        btnType: \"Success\",\n        disabled: !this.state.formIsValid,\n        children: \"ORDER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this);\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Registration,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Personal Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Registration/Registration.js"],"names":["React","Component","axios","Button","Spinner","classes","Input","Registration","state","userForm","name","elementType","elementConfig","type","placeholder","value","validation","required","validName","valid","touched","username","password","minLength","address","street","zipCode","maxLength","isNumeric","country","email","isEmail","gender","options","displayValue","maritalstatus","phonenumber","dateofbirth","label","ageCheck","registrationDate","idtype","idnumber","formIsValid","loading","userHandler","event","preventDefault","setState","formData","formElementIdentifier","console","log","Math","floor","random","id","user","userData","alert","post","then","response","props","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedUserForm","updatedFormElement","target","checkValidity","rules","isValid","trim","length","pattern","test","render","formElementsArray","key","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '../../components/Button/Button';\nimport Spinner from '../../UI_Components/Spinner/Spinner';\nimport classes from './Registration.css';\n//import axios from '../../../axios-orders';\nimport Input from '../../components/Input/Input';\n\nclass Registration extends Component {\n    \n    state = {\n        userForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    validName:true\n                },\n                valid: false,\n                touched: false\n            },\n            username: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your User Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                    \n                },\n                valid: false,\n                touched: false\n            },\n            address: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 6,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            gender: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: '', displayValue: 'Please select gender'},\n                        {value: 'male', displayValue: 'male'},\n                        {value: 'female', displayValue: 'female'}\n                    ]\n                },\n                value: '',\n                validation: {required: true},\n                valid: true\n            },\n            maritalstatus: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: '', displayValue: 'Please select  marital status'},\n                        {value: 'married', displayValue: 'married'},\n                        {value: 'divorced', displayValue: 'divorced'},\n                        {value: 'single', displayValue: 'single'}\n                    ]\n                },\n                value: '',\n                validation: {required: true},\n                valid: true\n            },\n            phonenumber: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'phonenumber'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 10,\n                    maxLength: 10,\n                },\n                valid: false,\n                touched: false\n            },\n            dateofbirth: {\n                elementType: 'input',\n                elementConfig: {\n                    label : 'DOB',\n                    type: 'date',\n                    placeholder: 'phonenumber'\n                },\n                value: '',\n                validation: {\n                    required :true,\n                    ageCheck:true\n                },\n                valid: false,\n                touched: false\n            },\n            registrationDate: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'date',\n                    placeholder: 'registration date'\n                },\n                value: '',\n                validation: {\n                    required :true\n                },\n                valid: false,\n                touched: false\n            },\n            idtype: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: '', displayValue: 'Please select  ID  Type'},\n                        {value: 'passport', displayValue: 'passport'},\n                        {value: 'driving', displayValue: 'driving license'},\n                        {value: 'ID card', displayValue: 'ID card'}\n                    ]\n                },\n                value: '',\n                validation: {required: true},\n                valid: true\n            },\n            idnumber: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ID Number'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    userHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { loading: true } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.userForm) {\n            console.log(formElementIdentifier);\n            formData[formElementIdentifier] = this.state.userForm[formElementIdentifier].value;\n        }\n        formData[\"id\"] ='R-'+Math.floor(Math.random()*(999-100+1)+100);\n        console.log(\" the generated user id\"+ formData.id)\n\n        const user = {\n           \n            userData: formData\n        }\n        alert(\" Your user Id is  :\"+formData.id);\n       \n       \n        axios.post( 'http://localhost:3000/users', formData )\n          .then( response => {\n              this.setState( { loading: false } );\n             this.props.history.push( '/' );\n           } )\n          .catch( error => {\n               this.setState( { loading: false } );\n          } );\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n        if(rules.validName){\n            const pattern = /^[a-zA-Z ]*$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n        if(rules.ageCheck){\n            console.log(\".............\"+value);\n\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedUserForm = {\n            ...this.state.userForm\n        };\n        const updatedFormElement = { \n            ...updatedUserForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedUserForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedUserForm) {\n            formIsValid = updatedUserForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({userForm: updatedUserForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.userForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.userForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.userHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.state.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.Registration}>\n                <h4>Enter your Personal Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}