{"ast":null,"code":"var _jsxFileName = \"/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport styles from './login.module.css';\nimport * as actionTypes from '../../store/action';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        username: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'User Name'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignup: true\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.controls) {\n        console.log(formElementIdentifier);\n        formData[formElementIdentifier] = this.state.controls[formElementIdentifier].value;\n      }\n\n      axios.get('http://localhost:3000/users').then(resp => {\n        let data = resp.data;\n        data.forEach(e => {\n          if (e.username === formData.username && e.password === formData.password) {\n            console.log(\"Logged in successfully\");\n            this.props.onLoginAction(e.username, e.id);\n            this.props.history.push('/Home');\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.registerHandler = event => {\n      event.preventDefault();\n      this.props.history.push('/Registration');\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Login,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [form, /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.registerHandler,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          btnType: \"Success\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoginAction: (name, id) => dispatch({\n      type: actionTypes.LOGIN_ACTION,\n      userName: name,\n      userId: id\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/venith/Desktop/FF_Assignment/policymanagement/src/components/Login/Login.js"],"names":["React","Component","Input","Button","styles","actionTypes","axios","connect","Login","state","controls","username","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","setState","submitHandler","preventDefault","formData","formElementIdentifier","console","log","get","then","resp","data","forEach","e","props","onLoginAction","id","history","push","catch","error","registerHandler","rules","isValid","trim","render","formElementsArray","key","config","form","map","formElement","mapDispatchToProps","dispatch","name","LOGIN_ACTION","userName","userId"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport styles from  './login.module.css';\nimport * as actionTypes from '../../store/action';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n    state = {\n        controls: {\n            username: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'User Name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n    checkValidity ( value, rules ) {\n        let isValid = true;\n        if ( !rules ) {\n            return true;\n        }\n\n        if ( rules.required ) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity( event.target.value, this.state.controls[controlName].validation ),\n                touched: true\n            }\n        };\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in this.state.controls) {\n            console.log(formElementIdentifier);\n            formData[formElementIdentifier] = this.state.controls[formElementIdentifier].value;\n        }\n        axios.get('http://localhost:3000/users')\n    .then(resp => {\n        let data = resp.data;\n        data.forEach(e => {\n            if((e.username===formData.username) &&(e.password===formData.password)){\n                console.log(\"Logged in successfully\");\n                this.props.onLoginAction(e.username,e.id);\n                this.props.history.push( '/Home' );\n            }\n        });\n    })\n    .catch(error => {\n        console.log(error);\n    }); \n       \n        \n    }\n\n    registerHandler = ( event ) => {\n        event.preventDefault();\n        this.props.history.push( '/Registration' );\n        \n    }\n   \n\n    render () {\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n      \n\n        return (\n            <div className={styles.Login}>\n               \n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\" >LOGIN</Button>\n                   \n                </form>\n                <form onSubmit={this.registerHandler}>\n                    \n                    <Button btnType=\"Success\">REGISTER</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\n\nconst mapDispatchToProps = dispatch =>{\n\n        return{\n            onLoginAction : (name,id) => dispatch({type:actionTypes.LOGIN_ACTION,userName:name,userId:id})\n        }\n};\n\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}